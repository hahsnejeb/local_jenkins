#!groovy
pipeline{
    agent any
    triggers {
        cron('H/30 2-5 * * 1-5')
    }
    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }


    parameters {
        choice(  name: 'terraformaction'
	       , choices : 'apply\nplan\ndestroy\n'
           , description: 'Select Terraform Action'
	    )
        booleanParam(  name: 'AAT1_PROV'
		     , defaultValue: true
		     , description: 'Should this env be provisioned?'
		)
        booleanParam(  name: 'AAT2_PROV'
		     , defaultValue: true
		     , description: 'Should this env be provisioned?'
		)
    }

    environment {
        PROJECT_NAME = 'infranewprovisioneenvironments'
    }
    
    stages{
        stage('PreReqs'){
            steps{
                script {
                    currentBuild.displayName = "LOCAL_${env.BUILD_ID}.terraform.${terraformaction}.environments"
                    currentBuild.description = "LOCAL_Terraform ${terraformaction} environments"
                }
            }
        }
        stage('Build AAT Environments') {
            parallel {
                stage ('Build aat1') {
                    when {
                        expression { params.AAT1_PROV == true}
                    }
                    steps {
                        catchError{
                        build job: 'JenkinsfileProvisionEnvironment', parameters: [
                        string(name: 'terraformaction', value: terraformaction),
                        string(name: 'environment', value: "aat1")
                        ]}
                    }
                }
                stage ('Build aat2') {
                    when {
                        expression { params.AAT2_PROV == true}
                    }
                    steps {
                        catchError{
                        build job: 'JenkinsfileProvisionEnvironment', parameters: [
                        string(name: 'terraformaction', value: terraformaction),
                        string(name: 'environment', value: "aat2")
                        ]}
                    }
                }
            }
        }
    }
}
